#include <WiFi.h>
#include <HTTPClient.h>

// ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WiFi
const char* ssid = "Pleum";         
const char* password = "112233445566";  

// ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ API ‡∏Ç‡∏≠‡∏á Strapi
const char* strapi_base_url = "http://35.186.145.183:1337/api/cars/1";  // URL ‡∏´‡∏•‡∏±‡∏Å
const char* strapi_checkpoint_url = "http://35.186.145.183:1337/api/cars/1/checkpoint";  // URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö checkpoint

#define IR_SENSOR_PIN  33  // ‡∏Ç‡∏≤‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå IR

bool lastState = false; // ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);

  Serial.println("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WiFi...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("\n‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WiFi ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
  Serial.print("üì∂ IP Address: ");
  Serial.println(WiFi.localIP());

  pinMode(IR_SENSOR_PIN, INPUT);

  // üîπ ‡∏£‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå IR ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏
  while (digitalRead(IR_SENSOR_PIN) == HIGH) {  // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    Serial.println("üõë ‡∏£‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå IR ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏...");
    delay(500);
  }

  // üîπ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Strapi
  testStrapiConnection();
}

void loop() {
  bool currentState = digitalRead(IR_SENSOR_PIN);

  if (currentState == HIGH && lastState == LOW) {
    Serial.println("üöÄ Object detected! Updating checkpoint1...");
    updateCheckpoint();
  }

  lastState = currentState;
  delay(500);
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Strapi
void testStrapiConnection() {
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("‚ùå WiFi ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠!");
    return;
  }

  HTTPClient http;
  http.begin(strapi_base_url);  // ‡πÉ‡∏ä‡πâ URL ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö

  int httpResponseCode = http.GET();
  if (httpResponseCode == 200) {
    String response = http.getString();
    Serial.println("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Strapi ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    Serial.println("üì• Response:");
    Serial.println(response);

    // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• checkpoint
    displayCheckpoints(response);
  } else {
    Serial.println("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Strapi (Error: " + String(httpResponseCode) + ")");
  }

  http.end();
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ Checkpoint ‡πÉ‡∏ô Strapi
void updateCheckpoint() {
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("‚ùå WiFi ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠!");
    return;
  }

  HTTPClient http;
  http.begin(strapi_checkpoint_url);  // ‡πÉ‡∏ä‡πâ URL ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö checkpoint
  http.addHeader("Content-Type", "application/json");  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞ header ‡∏ô‡∏µ‡πâ

  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÑ‡∏õ
  String jsonPayload = "{\"checkpoint1\": true}";  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÉ‡∏ô body

  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö POST
  int httpResponseCode = http.POST(jsonPayload);
  if (httpResponseCode == 200) {
    Serial.println("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Checkpoint ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ");

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å Strapi ‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    String response = http.getString();
    Serial.println("üì• Response from Strapi after update:");
    Serial.println(response);

    // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• checkpoint
    displayCheckpoints(response);
  } else {
    Serial.println("‚ùå Error: " + String(httpResponseCode));
    Serial.println("üîç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Strapi");
  }

  http.end();
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• checkpoint
void displayCheckpoints(String jsonResponse) {
  // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á checkpoint1
  int checkpoint1Index = jsonResponse.indexOf("\"checkpoint1\":");
  if (checkpoint1Index != -1) {
    int checkpoint1ValueIndex = checkpoint1Index + 13; // ‡∏Ç‡∏¢‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á checkpoint1
    String checkpoint1Value = jsonResponse.substring(checkpoint1ValueIndex, jsonResponse.indexOf(",", checkpoint1ValueIndex));
    Serial.println("üîπ checkpoint1: " + checkpoint1Value);
  }

  // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á checkpoint2
  int checkpoint2Index = jsonResponse.indexOf("\"checkpoint2\":");
  if (checkpoint2Index != -1) {
    int checkpoint2ValueIndex = checkpoint2Index + 13; // ‡∏Ç‡∏¢‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á checkpoint2
    String checkpoint2Value = jsonResponse.substring(checkpoint2ValueIndex, jsonResponse.indexOf(",", checkpoint2ValueIndex));
    Serial.println("üîπ checkpoint2: " + checkpoint2Value);
  }

  // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á checkpoint3
  int checkpoint3Index = jsonResponse.indexOf("\"checkpoint3\":");
  if (checkpoint3Index != -1) {
    int checkpoint3ValueIndex = checkpoint3Index + 13; // ‡∏Ç‡∏¢‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á checkpoint3
    String checkpoint3Value = jsonResponse.substring(checkpoint3ValueIndex, jsonResponse.indexOf(",", checkpoint3ValueIndex));
    Serial.println("üîπ checkpoint3: " + checkpoint3Value);
  }
}